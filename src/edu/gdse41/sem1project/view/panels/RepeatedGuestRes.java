/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.gdse41.sem1project.view.panels;

import edu.gdse41.sem1project.controller.ControllerFactory;
import edu.gdse41.sem1project.controller.custom.GuestController;
import edu.gdse41.sem1project.controller.custom.ReservationController;
import edu.gdse41.sem1project.dao.db.ConnectionFactory;
import edu.gdse41.sem1project.dto.GuestDTO;
import edu.gdse41.sem1project.dto.PaymentDTO;
import edu.gdse41.sem1project.dto.ReservationDTO;
import edu.gdse41.sem1project.dto.ReservationDetailsDTO;
import edu.gdse41.sem1project.dto.RoomDTO;
import edu.gdse41.sem1project.id.IDGenerator;
import edu.gdse41.sem1project.view.JasperReportViewer;
import edu.gdse41.sem1project.view.Reception;
import static edu.gdse41.sem1project.view.panels.ReservationForm.noOfNights;
import edu.gdse41.sem1project.view.panels.titles.ReservationTitle;
import java.awt.Color;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;

/**
 *
 * @author Hansani Kariyawasam
 */
public class RepeatedGuestRes extends javax.swing.JPanel {
    private ReservationController ctrlRes;
    private double total;
    private GuestController ctrlGuest;

    /**
     * Creates new form RepeatedGuestRes
     */
    public RepeatedGuestRes() {
        initComponents();
        loadTableData();
        lblNoOfNights1.setText(calculateNights(RepeatedGuestResRm.checkIn,RepeatedGuestResRm.checkOut));
        loadResDate();
        loadResId();
        setGuestDetails();
        ctrlRes=(ReservationController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.RESERVATION);
        ctrlGuest=(GuestController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.GUEST);
    }
    
    private void setGuestDetails(){
        ArrayList<GuestDTO> details=RepeatedGuestResRm.details;
        for (GuestDTO g : details) {
            lblGuestID.setText(g.getGuestID());
            lblName.setText(g.getFName());
            lblTel.setText(g.getTel());
        }
    }
    
    private void loadResId(){
        try {
            String id=IDGenerator.getNewID("Reservation", "Res_id", "R");
            lblResId.setText(id);
        } catch (SQLException ex) {
            Logger.getLogger(RepeatedGuestRes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(RepeatedGuestRes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void loadTableData(){
        ArrayList<Object[]> rows=RepeatedGuestResRm.rows;
        ArrayList<RoomDTO> roomDetails=new ArrayList<>();
        DefaultTableModel dtm=(DefaultTableModel) tblRoom.getModel();
        for (Object[] rowData : rows) {
            dtm.addRow(rowData);
            RoomDTO r=new RoomDTO(rowData[0].toString(),rowData[1].toString(),rowData[2].toString(),Double.parseDouble(rowData[3].toString()));
            roomDetails.add(r);
        }
        for (RoomDTO r : roomDetails) {
            total+=r.getRoomPrice();
        }
    }
    
    private String calculateNights(String checkIn, String checkOut){
        LocalDate cIn=LocalDate.parse(checkIn);
        LocalDate cOut=LocalDate.parse(checkOut);
        int nights=cOut.compareTo(cIn);
        noOfNights=nights;
        return ""+nights;
    }
    
    private void loadResDate(){ 
        Date d=new Date();
        SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
        String dateFormat=sdf.format(d);
        lblResDate.setText(dateFormat);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lblGuestID = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblTel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRoom = new javax.swing.JTable();
        lblResId = new javax.swing.JLabel();
        lblResDate = new javax.swing.JLabel();
        lblNoOfNights1 = new javax.swing.JLabel();
        lblBack = new javax.swing.JLabel();
        lblConfirm = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        cmbAgent = new javax.swing.JComboBox();
        lblPrint2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Reservation Date :");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, 180, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Reservation ID :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 170, 30));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 102, 102));
        jLabel11.setText("Agent :");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, 160, 30));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel9.setText("Booking Summary");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 210, 280, 50));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(153, 153, 153));
        jLabel12.setText("Guest ID :");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 280, 160, 30));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(153, 153, 153));
        jLabel13.setText("Guest Name :");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 330, 160, 30));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(153, 153, 153));
        jLabel10.setText("Mobile Number :");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 390, 160, 30));

        lblGuestID.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblGuestID.setForeground(new java.awt.Color(153, 153, 153));
        lblGuestID.setName("covers"); // NOI18N
        add(lblGuestID, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 280, 200, 30));

        lblName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblName.setForeground(new java.awt.Color(153, 153, 153));
        add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 330, 350, 30));

        lblTel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTel.setForeground(new java.awt.Color(153, 153, 153));
        add(lblTel, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 390, 200, 30));

        tblRoom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Room ID", "Room Type", "Status", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblRoom.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblRoom);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 20, -1, 140));

        lblResId.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblResId.setForeground(new java.awt.Color(102, 102, 102));
        lblResId.setName("covers"); // NOI18N
        add(lblResId, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 30, 200, 30));

        lblResDate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblResDate.setForeground(new java.awt.Color(102, 102, 102));
        add(lblResDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 80, 220, 30));

        lblNoOfNights1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblNoOfNights1.setForeground(new java.awt.Color(102, 102, 102));
        add(lblNoOfNights1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 130, 200, 30));

        lblBack.setBackground(new java.awt.Color(221, 188, 9));
        lblBack.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lblBack.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBack.setText("Back");
        lblBack.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblBack.setName("lblMain"); // NOI18N
        lblBack.setOpaque(true);
        lblBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBackMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblBackMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblBackMouseExited(evt);
            }
        });
        add(lblBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 550, 170, 50));

        lblConfirm.setBackground(new java.awt.Color(221, 188, 9));
        lblConfirm.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lblConfirm.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblConfirm.setText("Confirm");
        lblConfirm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblConfirm.setName("lblMain"); // NOI18N
        lblConfirm.setOpaque(true);
        lblConfirm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblConfirmMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblConfirmMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblConfirmMouseExited(evt);
            }
        });
        add(lblConfirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 550, 170, 50));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(102, 102, 102));
        jLabel14.setText("No Of Nights :");
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 160, 30));

        cmbAgent.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Direct", "Booking.Com", "Agoda", "AirBnB" }));
        add(cmbAgent, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 170, 110, 30));

        lblPrint2.setBackground(new java.awt.Color(221, 188, 9));
        lblPrint2.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lblPrint2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPrint2.setText("Registration Card");
        lblPrint2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblPrint2.setName("lblMain"); // NOI18N
        lblPrint2.setOpaque(true);
        lblPrint2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblPrint2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblPrint2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblPrint2MouseExited(evt);
            }
        });
        add(lblPrint2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 550, 200, 50));
    }// </editor-fold>//GEN-END:initComponents

    private void lblBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackMouseClicked
        Reception frmMain=(Reception) SwingUtilities.getWindowAncestor(this);
        frmMain.pnlMain.removeAll();
        RepeatedGuestResRm guest=new RepeatedGuestResRm();
        frmMain.pnlMain.add(guest);
        frmMain.pnltitle.removeAll();
        ReservationTitle title=new ReservationTitle();
        frmMain.pnltitle.add(title);
        frmMain.pnlMain.updateUI();

    }//GEN-LAST:event_lblBackMouseClicked

    private void lblConfirmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblConfirmMouseClicked
        ArrayList<Object[]> rows=Availability.rows;
        ArrayList<RoomDTO> roomsData = new ArrayList<>();
        for (Object[] row : rows) {
                RoomDTO r=new RoomDTO(row[0].toString(),row[1].toString(),row[2].toString(),Double.parseDouble(row[3].toString()));
                roomsData.add(r);
                
        }
        try {
            String res_id=lblResId.getText();
            String checkIn=RepeatedGuestResRm.checkIn;
            String checkOut=RepeatedGuestResRm.checkOut;
            String agent=(String) cmbAgent.getSelectedItem();
            String pid=IDGenerator.getNewID("Payment", "PID", "P");
            int nights=Integer.parseInt(lblNoOfNights1.getText());
            double amountPaid=0;
            if(!"Booking.Com".equals(cmbAgent.getSelectedItem().toString())){
                if("Direct".equals(cmbAgent.getSelectedItem().toString())){
                    amountPaid=(total*nights)/2;
                }
                if("Agoda".equals(cmbAgent.getSelectedItem().toString()) || "AirBnB".equals(cmbAgent.getSelectedItem().toString())){
                    amountPaid=total*nights;
                }
            }else{
                amountPaid=0;
            }
            String curDate=lblResDate.getText();
            PaymentDTO p1=new PaymentDTO(pid,res_id,amountPaid,curDate,null);
            ArrayList<ReservationDetailsDTO> resDetails=new ArrayList<>();
            int count=0;
            String lastId=IDGenerator.getNewID("ReservationDetails", "ResDetails_ID", "D");
            String resDetails_id;
            for(RoomDTO r : roomsData){
                if(count==0){
                    resDetails_id=IDGenerator.getNewID("ReservationDetails", "ResDetails_ID", "D");
                }else{
                    lastId=IDGenerator.getNewID(lastId, "D");
                    resDetails_id=lastId;
                }
                ReservationDetailsDTO res=new ReservationDetailsDTO(resDetails_id,lblGuestID.getText(),r.getRoomID(),res_id,curDate,r.getRoomPrice());
                System.out.println(res);
                resDetails.add(res);
                count++;
            }
            ReservationDTO r=new ReservationDTO(res_id,checkIn,checkOut,agent,resDetails,p1);
            boolean result=ctrlRes.addRepeatedGuestRes(r);
            Availability.rows.clear();
        } catch (SQLException ex) {
            Logger.getLogger(RepeatedGuestRes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(RepeatedGuestRes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(RepeatedGuestRes.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_lblConfirmMouseClicked

    private void lblPrint2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPrint2MouseClicked
        String id=lblGuestID.getText();
        
        String agent=(String) cmbAgent.getSelectedItem();
        try {
            GuestDTO g=ctrlGuest.search(id);
            Connection con=ConnectionFactory.getInstance().getConnection();
            JasperReport compiledReport=(JasperReport) JRLoader.loadObject(AddGuest.class.getResourceAsStream("/edu/gdse41/sem1project/reports/Registration.jasper"));
            Map<String,Object> parameters=new HashMap<>();
            parameters.put("agent", agent);
            parameters.put("res_id", lblResId.getText());
            parameters.put("checkIn", RepeatedGuestResRm.checkIn);
            parameters.put("checkOut", RepeatedGuestResRm.checkOut);
            parameters.put("noOfAdults", "");
            parameters.put("noOfKids", "");
            parameters.put("lastName", g.getLName());
            parameters.put("nic", g.getNIC());
            parameters.put("firstName", g.getFName());
            parameters.put("nationality", g.getNationality());
            parameters.put("dob", g.getDOB());
            parameters.put("passport", g.getPassport());
            parameters.put("tel", g.getTel());
            parameters.put("email", "");
            JasperPrint filledReport=JasperFillManager.fillReport(compiledReport, parameters, new JREmptyDataSource());
            JasperReportViewer jasperViewer=new JasperReportViewer(filledReport);
            jasperViewer.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(AddGuest.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(RepeatedGuestRes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lblPrint2MouseClicked

    private void lblPrint2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPrint2MouseEntered
        lblPrint2.setBackground(new Color(255,162,0));
        lblPrint2.setOpaque(true);
    }//GEN-LAST:event_lblPrint2MouseEntered

    private void lblPrint2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPrint2MouseExited
        lblPrint2.setBackground(new Color(221,188,9));
        lblPrint2.setOpaque(true);
    }//GEN-LAST:event_lblPrint2MouseExited

    private void lblBackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackMouseEntered
        lblBack.setBackground(new Color(255,162,0));
        lblBack.setOpaque(true);
    }//GEN-LAST:event_lblBackMouseEntered

    private void lblBackMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackMouseExited
        lblBack.setBackground(new Color(221,188,9));
        lblBack.setOpaque(true);
    }//GEN-LAST:event_lblBackMouseExited

    private void lblConfirmMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblConfirmMouseEntered
        lblConfirm.setBackground(new Color(255,162,0));
        lblConfirm.setOpaque(true);
    }//GEN-LAST:event_lblConfirmMouseEntered

    private void lblConfirmMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblConfirmMouseExited
        lblConfirm.setBackground(new Color(221,188,9));
        lblConfirm.setOpaque(true);
    }//GEN-LAST:event_lblConfirmMouseExited

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        Reception.reserveRoomPanel.setVisible(false);
        Reception.pnlViewReports.setVisible(false);
    }//GEN-LAST:event_formMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbAgent;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBack;
    private javax.swing.JLabel lblConfirm;
    private javax.swing.JLabel lblGuestID;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNoOfNights1;
    private javax.swing.JLabel lblPrint2;
    private javax.swing.JLabel lblResDate;
    private javax.swing.JLabel lblResId;
    private javax.swing.JLabel lblTel;
    private javax.swing.JTable tblRoom;
    // End of variables declaration//GEN-END:variables
}
