/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.gdse41.sem1project.view.panels;

import edu.gdse41.sem1project.controller.ControllerFactory;
import edu.gdse41.sem1project.controller.custom.GuestController;
import edu.gdse41.sem1project.controller.custom.ReservationController;
import edu.gdse41.sem1project.controller.custom.RoomController;
import edu.gdse41.sem1project.dto.GuestDTO;
import edu.gdse41.sem1project.dto.ReservationDTO;
import edu.gdse41.sem1project.dto.RoomDTO;
import edu.gdse41.sem1project.view.Reception;
import edu.gdse41.sem1project.view.panels.titles.GuestDetlsTitle;
import edu.gdse41.sem1project.view.panels.titles.ReservationTitle;
import java.awt.Color;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.WARNING_MESSAGE;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hansani Kariyawasam
 */
public class RepeatedGuestResRm extends javax.swing.JPanel {
    private RoomController ctrlRm;
    private ReservationController ctrlRes;
    public static ArrayList<Object[]> rows=new ArrayList<>();
    public static ArrayList<GuestDTO> details=new ArrayList<>();
    public static String checkIn;
    public static String checkOut;
    private GuestController ctrlGuest;

    /**
     * Creates new form RepeatedGuestResRm
     */
    public RepeatedGuestResRm() {
        initComponents();
        ctrlRm=(RoomController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.ROOM);
        ctrlGuest=(GuestController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.GUEST);
        ctrlRes=(ReservationController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.RESERVATION);
        loadGuestDetails();
    }
    
    private void loadGuestDetails(){
        try {
            ArrayList<GuestDTO> guestList=ctrlGuest.view();
            DefaultTableModel dtm=(DefaultTableModel) tblGuestDetails.getModel();
            for (GuestDTO g : guestList) {
                String name=g.getFName()+" "+g.getLName();
                Object []  rowData={g.getGuestID(),name,g.getTel()};
                dtm.addRow(rowData);
            }
        } catch (Exception ex) {
            Logger.getLogger(RepeatedGuestResRm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table2 = new javax.swing.JTable();
        lblReserve = new javax.swing.JLabel();
        lblNext = new javax.swing.JLabel();
        lblCancel1 = new javax.swing.JLabel();
        txtCheckIn = new org.jdesktop.swingx.JXDatePicker();
        jLabel15 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCheckOut = new org.jdesktop.swingx.JXDatePicker();
        jLabel6 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblGuestDetails = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                formPropertyChange(evt);
            }
        });
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(221, 188, 9));
        jLabel3.setText("Available Rooms");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 40, 270, 40));

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Room ID", "Room Type", "Status", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        table1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(table1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 100, 460, 140));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(221, 188, 9));
        jLabel2.setText("Reserved Rooms");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 300, 270, 40));

        table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Room ID", "Room Type", "Status", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table2.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(table2);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 360, 460, 140));

        lblReserve.setBackground(new java.awt.Color(221, 188, 9));
        lblReserve.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        lblReserve.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblReserve.setText("Reserve Room");
        lblReserve.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblReserve.setName("lblMain"); // NOI18N
        lblReserve.setOpaque(true);
        lblReserve.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblReserveMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblReserveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblReserveMouseExited(evt);
            }
        });
        add(lblReserve, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 250, 150, 40));

        lblNext.setBackground(new java.awt.Color(221, 188, 9));
        lblNext.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        lblNext.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNext.setText("Next");
        lblNext.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblNext.setName("lblMain"); // NOI18N
        lblNext.setOpaque(true);
        lblNext.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblNextMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblNextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblNextMouseExited(evt);
            }
        });
        add(lblNext, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 550, 160, 40));

        lblCancel1.setBackground(new java.awt.Color(221, 188, 9));
        lblCancel1.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        lblCancel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCancel1.setText("Add Customer");
        lblCancel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblCancel1.setName("lblMain"); // NOI18N
        lblCancel1.setOpaque(true);
        lblCancel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCancel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblCancel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblCancel1MouseExited(evt);
            }
        });
        add(lblCancel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 550, 160, 40));

        txtCheckIn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCheckInMouseClicked(evt);
            }
        });
        txtCheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCheckInActionPerformed(evt);
            }
        });
        txtCheckIn.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtCheckInPropertyChange(evt);
            }
        });
        add(txtCheckIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, 200, 30));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(102, 102, 102));
        jLabel15.setText("Check-In-Date :");
        add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 150, 30));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Guest Name :");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, 170, 30));

        txtCheckOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCheckOutMouseClicked(evt);
            }
        });
        txtCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCheckOutActionPerformed(evt);
            }
        });
        txtCheckOut.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtCheckOutPropertyChange(evt);
            }
        });
        add(txtCheckOut, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, 200, 30));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Check-Out-Date :");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 170, 30));

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 290, 200, 30));

        tblGuestDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Guest ID", "Guest Name", "Mobile No"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblGuestDetails.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tblGuestDetails);
        if (tblGuestDetails.getColumnModel().getColumnCount() > 0) {
            tblGuestDetails.getColumnModel().getColumn(0).setResizable(false);
            tblGuestDetails.getColumnModel().getColumn(0).setPreferredWidth(10);
            tblGuestDetails.getColumnModel().getColumn(1).setResizable(false);
            tblGuestDetails.getColumnModel().getColumn(2).setResizable(false);
        }

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 360, 350, 230));
    }// </editor-fold>//GEN-END:initComponents

    private void lblReserveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblReserveMouseClicked
        if(tblGuestDetails.getSelectedRow()==-1){
            JOptionPane.showMessageDialog(this, "Please Select a Guest");
        }else{    
            DefaultTableModel dtm=(DefaultTableModel) tblGuestDetails.getModel();
            GuestDTO g=new GuestDTO();
            g.setGuestId((String) dtm.getValueAt(tblGuestDetails.getSelectedRow(), 0));
            g.setFName((String) dtm.getValueAt(tblGuestDetails.getSelectedRow(), 1));
            g.setTel((String) dtm.getValueAt(tblGuestDetails.getSelectedRow(), 2));
            details.add(g);
            DefaultTableModel dtm1=(DefaultTableModel)table1.getModel();
            Object [] rowData={dtm1.getValueAt(table1.getSelectedRow(),0),dtm1.getValueAt(table1.getSelectedRow(),1),dtm1.getValueAt(table1.getSelectedRow(),2),dtm1.getValueAt(table1.getSelectedRow(),3)};
            rows.add(rowData);
            dtm1.removeRow(table1.getSelectedRow());
            DefaultTableModel dtm2=(DefaultTableModel)table2.getModel();
            dtm2.addRow(rowData);
        }
    }//GEN-LAST:event_lblReserveMouseClicked

    private void lblNextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNextMouseClicked
        if(table2.getRowCount()==0){
            JOptionPane.showMessageDialog(this,"First you must select and reserve a room","Warning Message",WARNING_MESSAGE);
        }else{
            Date in=txtCheckIn.getDate();
            Date out=txtCheckOut.getDate();
            SimpleDateFormat dateFormat=new SimpleDateFormat("yyyy-MM-dd");
            checkIn=dateFormat.format(in);
            checkOut=dateFormat.format(out);
            Reception frmMain=(Reception) SwingUtilities.getWindowAncestor(this);
            frmMain.pnlMain.removeAll();
            RepeatedGuestRes a=new RepeatedGuestRes();
            frmMain.pnlMain.add(a);
            frmMain.pnltitle.removeAll();
            ReservationTitle title=new ReservationTitle();
            frmMain.pnltitle.add(title);
            frmMain.pnlMain.updateUI();
        }
    }//GEN-LAST:event_lblNextMouseClicked

    private void txtCheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCheckInActionPerformed
        Reception.reserveRoomPanel.setVisible(false);
        Reception.pnlViewReports.setVisible(false);
    }//GEN-LAST:event_txtCheckInActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        String name=txtName.getText();
        try {
            ArrayList<GuestDTO> nameList=ctrlGuest.searchGuest(name);
            if(nameList.size()>0){
                DefaultTableModel dtm=(DefaultTableModel) tblGuestDetails.getModel();
                dtm.setRowCount(0);
                for (GuestDTO g : nameList) {
                    Object [] rowData={g.getGuestID(),g.getFName(),g.getTel()};
                    dtm.addRow(rowData);
                }
                
            }else{
                JOptionPane.showMessageDialog(tblGuestDetails, "Customer could not found");
            }
        } catch (Exception ex) {
            Logger.getLogger(RepeatedGuestResRm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCheckOutActionPerformed
        Reception.reserveRoomPanel.setVisible(false);
        Reception.pnlViewReports.setVisible(false);
        try {
            SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
            Date date=new Date();
            Date checkInDate=txtCheckIn.getDate();
            Date checkOutDate=txtCheckOut.getDate();
            String checkIn=sdf.format(checkInDate);
            String checkOut=sdf.format(checkOutDate);
            LocalDate cIn=LocalDate.parse(checkIn);
            LocalDate cOut=LocalDate.parse(checkOut);
            ArrayList<ReservationDTO> dates=ctrlRes.searchAvailability();
            for (ReservationDTO d : dates) {
                LocalDate dbCheckIn=LocalDate.parse(d.getCheckInDate());
                LocalDate dbCheckOut=LocalDate.parse(d.getCheckOutDate());
                ArrayList<RoomDTO> roomList=ctrlRm.view();
                DefaultTableModel dtm=(DefaultTableModel)table1.getModel();
                if((dbCheckIn.isAfter(cIn) && dbCheckIn.isBefore(cOut))||(dbCheckOut.isAfter(cIn) && dbCheckOut.isBefore(cOut))){
                    JOptionPane.showMessageDialog(table1, "There are no rooms available on this day");
                    dtm.setRowCount(0);
                    break;
                }else{
                    dtm.setRowCount(0);
                for(RoomDTO r1:roomList){
                    Object [] rowData={r1.getRoomID(),r1.getRoomType(),r1.getStatus(),r1.getRoomPrice()};
                    dtm.addRow(rowData);
                }
            }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Availability.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Availability.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(Availability.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtCheckOutActionPerformed

    private void lblCancel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCancel1MouseClicked
        Reception frmMain=(Reception) SwingUtilities.getWindowAncestor(this);
        frmMain.pnlMain.removeAll();
        AgentAddGuest d=new AgentAddGuest();
        frmMain.pnlMain.add(d);
        frmMain.pnltitle.removeAll();
        GuestDetlsTitle title=new GuestDetlsTitle();
        frmMain.pnltitle.add(title);
        frmMain.pnlMain.updateUI();
    }//GEN-LAST:event_lblCancel1MouseClicked

    private void lblReserveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblReserveMouseEntered
        lblReserve.setBackground(new Color(255,162,0));
        lblReserve.setOpaque(true);
    }//GEN-LAST:event_lblReserveMouseEntered

    private void lblReserveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblReserveMouseExited
        lblReserve.setBackground(new Color(221,188,9));
        lblReserve.setOpaque(true);
    }//GEN-LAST:event_lblReserveMouseExited

    private void lblCancel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCancel1MouseEntered
        lblCancel1.setBackground(new Color(255,162,0));
        lblCancel1.setOpaque(true);
    }//GEN-LAST:event_lblCancel1MouseEntered

    private void lblCancel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCancel1MouseExited
        lblCancel1.setBackground(new Color(221,188,9));
        lblCancel1.setOpaque(true);
    }//GEN-LAST:event_lblCancel1MouseExited

    private void lblNextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNextMouseEntered
        lblNext.setBackground(new Color(255,162,0));
        lblNext.setOpaque(true);
    }//GEN-LAST:event_lblNextMouseEntered

    private void lblNextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNextMouseExited
        lblNext.setBackground(new Color(221,188,9));
        lblNext.setOpaque(true);
    }//GEN-LAST:event_lblNextMouseExited

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        Reception.reserveRoomPanel.setVisible(false);
        Reception.pnlViewReports.setVisible(false);
    }//GEN-LAST:event_formMouseClicked

    private void txtCheckInMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCheckInMouseClicked
        Reception.reserveRoomPanel.setVisible(false);
    }//GEN-LAST:event_txtCheckInMouseClicked

    private void txtCheckOutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCheckOutMouseClicked
        Reception.reserveRoomPanel.setVisible(false);
    }//GEN-LAST:event_txtCheckOutMouseClicked

    private void txtCheckInPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtCheckInPropertyChange

    }//GEN-LAST:event_txtCheckInPropertyChange

    private void txtCheckOutPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtCheckOutPropertyChange
        txtCheckOut.getMonthView().setLowerBound(txtCheckIn.getDate());
    }//GEN-LAST:event_txtCheckOutPropertyChange

    private void formPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_formPropertyChange
        txtCheckIn.getMonthView().setLowerBound(new Date());
    }//GEN-LAST:event_formPropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblCancel1;
    private javax.swing.JLabel lblNext;
    private javax.swing.JLabel lblReserve;
    private javax.swing.JTable table1;
    private javax.swing.JTable table2;
    private javax.swing.JTable tblGuestDetails;
    private org.jdesktop.swingx.JXDatePicker txtCheckIn;
    private org.jdesktop.swingx.JXDatePicker txtCheckOut;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
